{"version":3,"sources":["layouts/MyStuff/MyStuff.module.css","components/Intro/Intro.module.css","components/Nav/Nav.module.css","serviceWorker.js","components/Nav/Nav.tsx","components/About/About.jsx","components/Intro/Intro.jsx","layouts/Projects/Projects.jsx","layouts/Home/Home.jsx","layouts/Activity/Activity.jsx","layouts/MyStuff/MyStuff.jsx","index.tsx","components/About/About.module.css","layouts/Projects/Projects.module.css","layouts/Activity/Activity.module.css"],"names":["module","exports","Boolean","window","location","hostname","match","Nav","className","styles","header","to","Skills","styled","div","props","color","Social","About","sidebar","profileimg","src","alt","profile_name","skills_container","social","size","Intro","intro","title","subtext","Project","image","gh","project","url","href","Projects","container","Home","Commit","commit","profile","actor","avatar_url","login","date","Date","created_at","toDateString","event","type","repo","name","Activity","getCommitData","a","fetch","then","r","json","useState","commits","setCommits","useEffect","response","fetchData","console","log","map","DisplayCard","items","content_card","list_title","e","list_item","mystuff","MyStuff","stuff","ReactDOM","render","StrictMode","basename","process","exact","path","component","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.18a4abf4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"MyStuff_container__3Y2b0\",\"content_card\":\"MyStuff_content_card__1A2Lx\",\"list_title\":\"MyStuff_list_title__15vkV\",\"list_item\":\"MyStuff_list_item__Kh9GI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"intro\":\"Intro_intro__23lGD\",\"subtext\":\"Intro_subtext__3eEnc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Nav_header__wHv4J\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport styles from \"./Nav.module.css\";\nimport {Link} from \"react-router-dom\";\n\nconst Nav: React.FC = () => {\n  return (\n    <div>\n      <ul className={styles.header}>\n        <li><Link to=\"/\">Home</Link></li>\n        <li><Link to=\"/projects\">My Projects</Link></li>\n        <li><Link to=\"/activity\">My Activity</Link></li>\n        <li><Link to=\"/mystuff\">What I'm upto</Link></li>\n      </ul>\n    </div>\n  );\n};\n\nexport default Nav;\n","import React from \"react\";\nimport styles from \"./About.module.css\";\nimport styled from \"styled-components\";\nimport {\n  FaInstagram,\n  FaGithub,\n  FaLinkedin\n} from 'react-icons/fa';\n\n// prettier-ignore\nconst Skills = styled.div`\n  border: solid 1px purple;\n  padding: 2px 6px;\n  margin: 8px 2px;\n  border-radius: 3px;\n  background-color: ${props => props.color};\n`;\n\n// create a social component for socials\n\nconst Social = () => {\n  return <div> \n    <h3>feel free to reach out</h3>\n  </div>;\n};\n\nconst About = () => {\n  return (\n    <>\n      <div className={styles.sidebar}>\n        <div>\n          <img \n            className={styles.profileimg}\n            src=\"../../images/profile.png\" \n            alt=\"profile\" />\n          </div>\n        <h1 className={styles.profile_name}>Levinson D'souza</h1>\n        <div className={styles.skills_container}>\n          <Skills color=\"#ff6666\"> React.js </Skills>\n          <Skills color=\"#ccffcc\"> JavaScript (ES6) </Skills>\n          <Skills color=\"limegreen\"> Typescript </Skills>\n          <Skills color=\"lightblue\"> SQL & NoSQL </Skills>\n          <Skills color=\"limegreen\"> DS & Alg. </Skills>\n          <Skills color=\"orange\"> Python </Skills>\n          <Skills color=\"green\"> Vim </Skills>\n        </div>\n        <Social className={styles.social} /> \n        <div>\n          <FaInstagram size=\"3em\"/>\n          <FaGithub size=\"3em\" />\n          <FaLinkedin size=\"3em\" />\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default About;\n","import React from \"react\";\nimport styles from \"./Intro.module.css\";\n\nconst Intro = () => {\n  return (\n    <div className={styles.intro}>\n      <h1 className={styles.title}>\n        Hi, I'm<br />\n        Levinson D'souza\n      </h1>\n      <p className={styles.subtext}> I like creating web projects, learning and trying out new things, finding out why something works or why not. \n        </p>\n    </div>\n  );\n};\nexport default Intro;\n","import React from \"react\";\n\nimport styles from \"./Projects.module.css\";\nimport styled from \"styled-components\";\n\n// Project component \n// { imageUrl, Title, Githublink}\n\nconst Project = ({image, title, gh}) => {\n  return (\n    <div className={styles.project}>\n      <img url={image} alt=\"\" />\n      <a href={gh}> {title} </a>\n    </div>\n  )\n}\n\n\nconst Projects = () => {\n  return <div className={styles.container}>\n    <div className={styles.project}> Sample project 1</div>\n    <div className={styles.project}> Sample project 2 </div>\n    <div className={styles.project}> Sample project 2 </div>\n    <Project image=\"\" title=\"my new project\" gh=\"www.com\" />\n  </div>\n}\n\nexport default Projects;\n","import React from \"react\";\n\nimport { About, Intro } from \"../../components\";\n\nconst Home = () => {\n  return (\n    <>\n      <Intro />,\n      <About />\n    </>\n  );\n};\n\nexport default Home;\n","import React, {useState, useEffect} from 'react';\nimport styles from './Activity.module.css';\n\nconst Commit = ({commit}) => {\n  return <div className={styles.commit}>\n    <div className={styles.profile}>\n      <img src={commit.actor.avatar_url} />\n      <a href={commit.actor.url}>{commit.actor.login}</a>\n      <span className={styles.date}>\n        {new Date(commit.created_at).toDateString()}\n      </span>\n    </div>\n    <div className={styles.event}><p>{commit.type}</p></div>\n    <div>to <a href={commit.repo.url}>{commit.repo.name}</a></div>\n  </div>\n}\n\nconst Activity = () => {\n  const url = \"https://api.github.com/users/LEvinson2504/events\";\n  const getCommitData = async (url) => {\n    return await fetch(url).then(r => r.json())\n  }\n  const [commits, setCommits] = useState(\"\");\n  useEffect(() => {\n    async function fetchData() {\n      const response = await getCommitData(url);\n      setCommits(response)\n    }\n    fetchData();\n  }, [])\n\n  console.log(commits)\n  return <div className={styles.container}>\n    {commits && commits.map(commit => <Commit commit={commit} />)}\n  </div>\n}\n\nexport default Activity;\n","import React from 'react';\nimport styles from './MyStuff.module.css';\n\nconst DisplayCard = (props) => {\n  const {title, items} = props;\n  return <div className={styles.content_card}>\n    <h1 className={styles.list_title}> {title} </h1>\n    <ul>\n      { items.map( e => <li><h3 className={styles.list_item}>{e}</h3></li>)}\n    </ul>\n  </div>\n}\n\nconst mystuff = [\n  {\n    title: \"Books\",\n    items: [\n      \"Learning React\",\n      \"Cracking The Coding Interview\",\n      \"Eloquent Javascript\",\n      \"Pragmatic Programmer\"\n    ]\n  },\n  {\n    title: \"Courses I'm taking\",\n    items: [\n      \"full stack open\",\n      \"The Odin Project\",\n      \"CS50X Web Development\"\n    ]\n  }\n]\n\nconst MyStuff = () => {\n  return <div className={styles.container}>\n    { mystuff.map( stuff => \n    <DisplayCard \n        title={stuff.title}\n        items={stuff.items} \n      />)}\n  </div>\n}\n\nexport default MyStuff;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport {Route, BrowserRouter} from \"react-router-dom\";\nimport {\n  Home, \n  Projects, \n  Nav, \n  Activity,\n  MyStuff,\n  About\n} from \"./components\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <div className=\"container\">\n      <BrowserRouter basename={process.env.PUBLIC_URL}>\n        <Nav />\n        <Route exact path=\"/\" component={Home} />\n        <Route path=\"/projects\" component={Projects} />\n        <Route path=\"/activity\" component={Activity} />\n        <Route path=\"/mystuff\" component={MyStuff} />\n      </BrowserRouter>\n    </div>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sidebar\":\"About_sidebar__2ebjC\",\"skills_container\":\"About_skills_container__3EqTO\",\"profile_name\":\"About_profile_name__3quvj\",\"profileimg\":\"About_profileimg__29MWR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Projects_container__2Eq8k\",\"project\":\"Projects_project__3i9LH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Activity_container__286WK\",\"commit\":\"Activity_commit__2iF4T\",\"profile\":\"Activity_profile__2nClU\",\"event\":\"Activity_event__3KBbp\",\"date\":\"Activity_date__2qycZ\"};"],"sourceRoot":""}