{"version":3,"sources":["components/Nav/Nav.module.css","layouts/Projects/Projects.module.css","layouts/MyStuff/MyStuff.module.css","components/About/About.module.css","layouts/Activity/Activity.module.css","serviceWorker.js","components/Nav/Nav.tsx","components/About/About.jsx","components/Intro/Intro.jsx","layouts/Projects/Projects.jsx","layouts/Home/Home.jsx","layouts/Activity/Activity.jsx","layouts/MyStuff/MyStuff.jsx","index.tsx"],"names":["module","exports","Boolean","window","location","hostname","match","Nav","className","styles","header","to","link","Skill","title","color","Badge","variant","variantColor","fontSize","m","p","fontFamily","Social","About","Flex","sidebar","profileimg","src","process","alt","effect","Text","px","wrap","justifyContent","social","Stack","isInline","size","Intro","Box","h","mt","mx","w","fontStyle","Project","image","gh","project","url","href","Projects","container","Home","Commit","commit","background","borderRadius","justify","direction","Avatar","actor","avatar_url","login","alignSelf","Date","created_at","toDateString","type","as","repo","name","Activity","getCommitData","a","fetch","then","r","json","useState","commits","setCommits","useEffect","response","fetchData","console","log","map","DisplayCard","props","items","content_card","list_title","e","list_item","mystuff","MyStuff","stuff","ReactDOM","render","ThemeProvider","CSSReset","StrictMode","basename","exact","path","component","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.b8d41321.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Nav_header__wHv4J\",\"link\":\"Nav_link__1CVGd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Projects_container__2Eq8k\",\"project\":\"Projects_project__3i9LH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"MyStuff_container__3Y2b0\",\"content_card\":\"MyStuff_content_card__1A2Lx\",\"list_title\":\"MyStuff_list_title__15vkV\",\"list_item\":\"MyStuff_list_item__Kh9GI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sidebar\":\"About_sidebar__2ebjC\",\"skills_container\":\"About_skills_container__3EqTO\",\"profile_name\":\"About_profile_name__3quvj\",\"profileimg\":\"About_profileimg__29MWR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Activity_container__286WK\",\"commit\":\"Activity_commit__2iF4T\",\"profile\":\"Activity_profile__2nClU\",\"event\":\"Activity_event__3KBbp\",\"date\":\"Activity_date__2qycZ\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport styles from \"./Nav.module.css\";\nimport { Link } from \"react-router-dom\";\n\nconst Nav: React.FC = () => {\n  return (\n    <div>\n      <ul className={styles.header}>\n        <li>\n          <Link to=\"/\" className={styles.link}>\n            Home\n          </Link>\n        </li>\n        <li>\n          <Link to=\"/projects\" className={styles.link}>\n            My Projects\n          </Link>\n        </li>\n        <li>\n          <Link to=\"/activity\" className={styles.link}>\n            My Activity\n          </Link>\n        </li>\n        <li>\n          <Link to=\"/mystuff\" className={styles.link}>\n            What I'm upto\n          </Link>\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nexport default Nav;\n","import React from \"react\";\nimport styles from \"./About.module.css\";\nimport styled from \"styled-components\";\nimport { FaInstagram, FaGithub, FaLinkedin } from \"react-icons/fa\";\nimport { LazyLoadImage } from \"react-lazy-load-image-component\";\nimport { Text, Flex, Badge, Stack } from \"@chakra-ui/core\";\n// prettier-ignore\n\nconst skills = [\n  \"React.js\",\n  \"Javascript ES6\",\n  \"Typescript\",\n  \"python\",\n  \"vim\"\n]\n\nconst Skill = ({ title, color }) => {\n  return (\n    <Badge\n      variant=\"outline\"\n      variantColor={color}\n      fontSize=\"1em\"\n      m=\"5px\"\n      p=\"3px\"\n      fontFamily=\"helvetica\"\n    >\n      {title}\n    </Badge>\n  );\n};\n\n// create a social component for socials\n\nconst Social = () => {\n  return (\n    <div>\n      <h3>feel free to reach out</h3>\n    </div>\n  );\n};\n\nconst About = () => {\n  return (\n    <Flex className={styles.sidebar}>\n      <div>\n        <LazyLoadImage\n          className={styles.profileimg}\n          src={process.env.PUBLIC_URL + \"/images/profile.png\"}\n          alt=\"profile\"\n          effect=\"opacity\"\n        />\n      </div>\n      <Text fontSize=\"40px\" px=\"2vw\">\n        Levinson D'souza\n      </Text>\n\n      <Flex wrap=\"wrap\" justifyContent=\"center\">\n        <Skill title=\"Javascript (ES6)\" color=\"red\" />\n        <Skill title=\"Typescript\" color=\"blue\" />\n        <Skill title=\"Python\" color=\"green\" />\n        <Skill title=\"node.js\" color=\"yellow\" />\n      </Flex>\n\n      <Social className={styles.social} />\n\n      <Stack isInline>\n        <FaInstagram size=\"3em\" />\n        <FaGithub size=\"3em\" />\n        <FaLinkedin size=\"3em\" />\n      </Stack>\n    </Flex>\n  );\n};\n\nexport default About;\n","import React from \"react\";\nimport { Box, Text } from \"@chakra-ui/core\";\n\nconst Intro = () => {\n  return (\n    <Box p={5} h=\"100%\" mt=\"14em\" mx=\"5vw\">\n      <Text fontSize=\"7vw\" color=\"white\" fontFamily=\"prata\">\n        Hi, I'm\n        <br />\n        Levinson D'souza\n      </Text>\n      <Text fontSize=\"2vw\" w=\"50%\" fontStyle=\"italic\" fontFamily=\"prata\">\n        I like creating web projects, learning and trying out new things,\n        finding out why something works or why not.\n      </Text>\n    </Box>\n  );\n};\nexport default Intro;\n","import React from \"react\";\n\nimport styles from \"./Projects.module.css\";\nimport styled from \"styled-components\";\n\n// Project component \n// { imageUrl, Title, Githublink}\n\nconst Project = ({image, title, gh}) => {\n  return (\n    <div className={styles.project}>\n      <img url={image} alt=\"\" />\n      <a href={gh}> {title} </a>\n    </div>\n  )\n}\n\n\nconst Projects = () => {\n  return <div className={styles.container}>\n    <div className={styles.project}> Sample project 1</div>\n    <div className={styles.project}> Sample project 2 </div>\n    <div className={styles.project}> Sample project 2 </div>\n    <Project image=\"\" title=\"my new project\" gh=\"www.com\" />\n  </div>\n}\n\nexport default Projects;\n","import React from \"react\";\n\nimport { About, Intro } from \"../../components\";\n\nconst Home = () => {\n  return (\n    <>\n      <Intro />,\n      <About />\n    </>\n  );\n};\n\nexport default Home;\n","import React, { useState, useEffect } from \"react\";\nimport styles from \"./Activity.module.css\";\nimport { Box, Flex, Avatar, Text } from \"@chakra-ui/core\";\n\n// const Commit = ({commit}) => {\n//   return <div className={styles.commit}>\n//     <div className={styles.profile}>\n//       <img src={commit.actor.avatar_url} />\n//       <a href={commit.actor.url}>{commit.actor.login}</a>\n//       <span className={styles.date}>\n//         {new Date(commit.created_at).toDateString()}\n//       </span>\n//     </div>\n//     <div className={styles.event}><p>{commit.type}</p></div>\n//     <div>to <a href={commit.repo.url}>{commit.repo.name}</a></div>\n//   </div>\n// }\n\nconst Commit = ({ commit }) => {\n  return (\n    <Box background=\"white\" m=\"20px\" p=\"6px\" w=\"25vw\" borderRadius=\"md\">\n      <Flex justify=\"center\" direction=\"column\">\n        <Flex justify=\"space-evenly\">\n          <Avatar src={commit.actor.avatar_url} h=\"40px\" w=\"40px\" />\n          <Flex direction=\"column\">\n            <Text fontSize=\"20px\">@{commit.actor.login}</Text>\n            <Text alignSelf=\"center\" fontSize=\"10px\">\n              {new Date(commit.created_at).toDateString()}\n            </Text>\n          </Flex>\n        </Flex>\n        <Flex justify=\"space-evenly\">\n          <Text fontSize=\"15px\">{commit.type} to </Text>\n          <Text fontSize=\"15px\">\n            <Text as=\"a\" href={`https://github.com/${commit.repo.name}`}>\n              {commit.repo.name}\n            </Text>\n          </Text>\n        </Flex>\n      </Flex>\n    </Box>\n  );\n};\n\nconst Activity = () => {\n  const url = \"https://api.github.com/users/LEvinson2504/events\";\n  const getCommitData = async (url) => {\n    return await fetch(url).then((r) => r.json());\n  };\n  const [commits, setCommits] = useState(\"\");\n  useEffect(() => {\n    async function fetchData() {\n      const response = await getCommitData(url);\n      setCommits(response);\n    }\n    fetchData();\n  }, []);\n\n  console.log(commits);\n  return (\n    <div className={styles.container}>\n      {commits && commits.map((commit) => <Commit commit={commit} />)}\n    </div>\n  );\n};\n\nexport default Activity;\n","import React from 'react';\nimport styles from './MyStuff.module.css';\n\nconst DisplayCard = (props) => {\n  const {title, items} = props;\n  return <div className={styles.content_card}>\n    <h1 className={styles.list_title}> {title} </h1>\n    <ul>\n      { items.map( e => <li><h3 className={styles.list_item}>{e}</h3></li>)}\n    </ul>\n  </div>\n}\n\nconst mystuff = [\n  {\n    title: \"Books\",\n    items: [\n      \"Learning React\",\n      \"Cracking The Coding Interview\",\n      \"Eloquent Javascript\",\n      \"Pragmatic Programmer\"\n    ]\n  },\n  {\n    title: \"Courses I'm taking\",\n    items: [\n      \"full stack open\",\n      \"The Odin Project\",\n      \"CS50X Web Development\"\n    ]\n  }\n]\n\nconst MyStuff = () => {\n  return <div className={styles.container}>\n    { mystuff.map( stuff => \n    <DisplayCard \n        title={stuff.title}\n        items={stuff.items} \n      />)}\n  </div>\n}\n\nexport default MyStuff;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Route, BrowserRouter } from \"react-router-dom\";\nimport { Home, Projects, Nav, Activity, MyStuff, About } from \"./components\";\nimport { ThemeProvider, CSSReset, Box } from \"@chakra-ui/core\";\n\nReactDOM.render(\n  <ThemeProvider>\n    <CSSReset />\n    <React.StrictMode>\n      <Box>\n        <BrowserRouter basename={process.env.PUBLIC_URL}>\n          <Nav />\n          <Route exact path=\"/\" component={Home} />\n          <Route path=\"/projects\" component={Projects} />\n          <Route path=\"/activity\" component={Activity} />\n          <Route path=\"/mystuff\" component={MyStuff} />\n        </BrowserRouter>\n      </Box>\n    </React.StrictMode>\n  </ThemeProvider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}